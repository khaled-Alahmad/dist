import { drizzle } from 'drizzle-orm/neon-serverless';
import { drizzle as drizzlePg } from 'drizzle-orm/node-postgres';
import { Pool as NeonPool, neonConfig } from '@neondatabase/serverless';
import { Pool as PgPool } from 'pg';
import ws from "ws";
import * as schema from "@shared/schema";

// ุงูุชุญูู ูู ูุฌูุฏ DATABASE_URL
if (!process.env.DATABASE_URL) {
  console.error('\nโ ุฎุทุฃ ูุงุฏุญ: DATABASE_URL ุบูุฑ ููุฌูุฏ!\n');
  console.error('๐ ุงูุฎุทูุงุช ุงููุทููุจุฉ:');
  console.error('1๏ธโฃ  ุฃูุดุฆ ููู .env ูู ุฌุฐุฑ ุงููุดุฑูุน');
  console.error('2๏ธโฃ  ุฃุถู ุงูุณุทุฑ ุงูุชุงูู:');
  console.error('    DATABASE_URL=postgresql://username:password@localhost:5432/school_management\n');
  console.error('๐ก ูููุฒูุฏ ูู ุงููุนูููุงุชุ ุฑุงุฌุน ููู: AI_SETUP_ARABIC.txt\n');
  throw new Error("DATABASE_URL must be set. Did you forget to provision a database?");
}

// ุชุญุฏูุฏ ููุน ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุงุกู ุนูู DATABASE_URL
const isNeonDatabase = process.env.DATABASE_URL.includes('neon.tech') || 
                       process.env.DATABASE_URL.includes('neon.fl0.io') ||
                       process.env.DATABASE_URL.includes('pooler.supabase.com');

let pool: any;
let db: any;

if (isNeonDatabase) {
  // ุงุณุชุฎุฏุงู Neon Serverless (ููู Replit ุฃู Neon Cloud)
  console.log('๐ ุงุณุชุฎุฏุงู Neon Serverless Database');
  neonConfig.webSocketConstructor = ws;
  pool = new NeonPool({ connectionString: process.env.DATABASE_URL });
  db = drizzle({ client: pool, schema });
} else {
  // ุงุณุชุฎุฏุงู PostgreSQL ุงูุนุงุฏู (ููู VPS ุฃู Local)
  console.log('๐ ุงุณุชุฎุฏุงู PostgreSQL ุงูุนุงุฏู (Standard)');
  
  try {
    pool = new PgPool({ 
      connectionString: process.env.DATABASE_URL,
      // ุฅุนุฏุงุฏุงุช ุงูุงุชุตุงู ููู PostgreSQL ุงูุนุงุฏู
      max: 20, // ุฃูุตู ุนุฏุฏ ุงุชุตุงูุงุช ูู ุงูู pool
      idleTimeoutMillis: 30000, // ููุช ุงูุชุธุงุฑ ุงูุงุชุตุงูุงุช ุงูุฎุงููุฉ (30 ุซุงููุฉ)
      connectionTimeoutMillis: 10000, // ููุช ุงูุชุธุงุฑ ุงูุงุชุตุงู (10 ุซูุงูู)
    });

    // ุงูุชุญูู ูู ุงูุงุชุตุงู
    pool.on('error', (err: Error) => {
      console.error('\nโ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจู PostgreSQL:');
      console.error('   ' + err.message);
      console.error('\n๐ก ุงูุญููู ุงููุญุชููุฉ:');
      console.error('   โข ุชุฃูุฏ ูู ุชุดุบูู PostgreSQL: sudo systemctl start postgresql');
      console.error('   โข ุชุญูู ูู DATABASE_URL ูู ููู .env');
      console.error('   โข ุชุฃูุฏ ูู ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงููุณุชุฎุฏู');
      console.error('   โข ุฑุงุฌุน ููู AI_SETUP_ARABIC.txt ูููุณุงุนุฏุฉ\n');
    });

    db = drizzlePg(pool, { schema });
    
    // ูุญุต ุงูุงุชุตุงู ููุฑุงู ููู PostgreSQL ุงูุนุงุฏู
    pool.connect()
      .then((client: any) => {
        console.log('โ ุงูุงุชุตุงู ุจู PostgreSQL ูุงุฌุญ!');
        client.release();
      })
      .catch((error: any) => {
        console.error('\nโ ูุดู ุงูุงุชุตุงู ุจู PostgreSQL!');
        console.error('   ุงูุฎุทุฃ:', error.message);
        console.error('\n๐ ุงูุฃุฎุทุงุก ุงูุดุงุฆุนุฉ:');
        if (error.code === 'ECONNREFUSED') {
          console.error('   โข ECONNREFUSED โ PostgreSQL ูุง ูุนูู');
          console.error('     ุงูุญู: sudo systemctl start postgresql\n');
        } else if (error.code === '28P01') {
          console.error('   โข password authentication failed โ ูููุฉ ุงููุฑูุฑ ุฎุทุฃ');
          console.error('     ุงูุญู: ุฑุงุฌุน DATABASE_URL ูู .env\n');
        } else if (error.code === '3D000') {
          console.error('   โข database does not exist โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ');
          console.error('     ุงูุญู: ุฑุงุฌุน AI_SETUP_ARABIC.txt ูุฅูุดุงุก ุงููุงุนุฏุฉ\n');
        } else if (error.code === '42501') {
          console.error('   โข permission denied โ ุตูุงุญูุงุช ุบูุฑ ูุงููุฉ');
          console.error('     ุงูุญู: ุฑุงุฌุน DATABASE_CONNECTION_GUIDE.md\n');
        } else {
          console.error('   ุงูููุฏ:', error.code);
          console.error('   ุฑุงุฌุน ููู TROUBLESHOOTING_AR.md ูููุณุงุนุฏุฉ\n');
        }
      });
  } catch (error: any) {
    console.error('\nโ ูุดู ุฅูุดุงุก ุงุชุตุงู PostgreSQL:');
    console.error('   ' + error.message);
    console.error('\n๐ ุชุฃูุฏ ูู:');
    console.error('   1. ุชุซุจูุช PostgreSQL: sudo apt install postgresql');
    console.error('   2. ุชุดุบูู PostgreSQL: sudo systemctl start postgresql');
    console.error('   3. ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช: ุฑุงุฌุน AI_SETUP_ARABIC.txt');
    console.error('   4. DATABASE_URL ุตุญูุญ ูู ููู .env\n');
    throw error;
  }
}

export { pool, db };
